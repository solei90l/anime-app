{"ast":null,"code":"var _jsxFileName = \"/home/snoopy/Bureau/react-projeto-final-main/src/pages/MangaPage/MangaPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useTheme } from '../../context/Theme';\nimport { useAnimeShow } from '../../context/ShowAnime';\nimport { Main } from '../../pages/style/Styled';\nimport imgNotFound from '../../assets/imagem_nao_disponivel.png';\nimport axios from 'axios';\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Anime() {\n  _s();\n\n  const [categories, setCategories] = useState([]);\n  const {\n    themePage\n  } = useTheme();\n  const {\n    animeProvider\n  } = useAnimeShow();\n  console.log(animeProvider);\n  const manga = localStorage.getItem('manga');\n  const resposta = JSON.parse(manga);\n  var startDate = \"\";\n  var dateBrStart = \"\";\n\n  if (resposta.attributes.startDate === null) {\n    startDate = \"Data indisponível\";\n  } else {\n    startDate = resposta.attributes.startDate.split(\"-\");\n    dateBrStart = `${startDate[2]}/${startDate[1]}/${startDate[0]}`;\n  } // categories\n\n\n  useEffect(() => {\n    axios.get(`${resposta.relationships.categories.links.related}`).then(resp => {\n      setCategories(resp.data.data);\n    }).catch(error => {\n      console.log(\"Indisponível\");\n    });\n  }, []);\n  const categoriesInformation = categories.slice(0, 3);\n  return /*#__PURE__*/_jsxDEV(Main, {\n    theme: themePage,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"banner\",\n      src: resposta.attributes.coverImage === null ? imgNotFound : resposta.attributes.coverImage.small\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"voltar\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/manga\",\n        children: \"Voltar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 33\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"subtitle\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: resposta.attributes.posterImage.small,\n        className: \"card_image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: resposta.attributes.titles.en_jp || resposta.attributes.titles.en || resposta.attributes.titles.en_us\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: resposta.type === \"anime\" ? \"Anime\" : \"Manga\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"categories\",\n          children: categoriesInformation.map(resp => {\n            return /*#__PURE__*/_jsxDEV(\"p\", {\n              children: resp.attributes.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 40\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Classifica\\xE7\\xE3o M\\xE9dia: \", resposta.attributes.averageRating === null ? \"Indisponível\" : resposta.attributes.averageRating + \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"subtitle_synopsis\",\n          children: resposta.attributes.synopsis\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Data de lan\\xE7amento: \", startDate === \"Data indisponível\" ? startDate : dateBrStart]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Quantidade de epis\\xF3dios: \", resposta.attributes.episodeCount === null || resposta.attributes.episodeCount === undefined ? \"Indisponível\" : resposta.attributes.episodeCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Classifica\\xE7\\xE3o Indicativa: \", resposta.attributes.ageRatingGuide === null ? \"Indisponível\" : resposta.attributes.ageRatingGuide]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Status: \", resposta.attributes.status === \"finished\" ? \"finalizado\" : \"Atual\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Anime, \"h+YT83qWRKmVf+/+ZTDq8p1Tq4A=\", false, function () {\n  return [useTheme, useAnimeShow];\n});\n\n_c = Anime;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"Anime\");","map":{"version":3,"sources":["/home/snoopy/Bureau/react-projeto-final-main/src/pages/MangaPage/MangaPage.js"],"names":["React","useEffect","useState","useTheme","useAnimeShow","Main","imgNotFound","axios","Link","Anime","categories","setCategories","themePage","animeProvider","console","log","manga","localStorage","getItem","resposta","JSON","parse","startDate","dateBrStart","attributes","split","get","relationships","links","related","then","resp","data","catch","error","categoriesInformation","slice","coverImage","small","posterImage","titles","en_jp","en","en_us","type","map","title","averageRating","synopsis","episodeCount","undefined","ageRatingGuide","status"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useTheme } from '../../context/Theme';\nimport { useAnimeShow } from '../../context/ShowAnime';\nimport { Main } from '../../pages/style/Styled';\nimport imgNotFound from '../../assets/imagem_nao_disponivel.png'\nimport axios from 'axios';\nimport { Link } from \"react-router-dom\";\n\n\nexport default function Anime(){\n\n    const [categories, setCategories] = useState([])\n\n    const { themePage } = useTheme();\n\n    const { animeProvider } = useAnimeShow();\n    \n    console.log(animeProvider)\n\n    const manga = localStorage.getItem('manga');\n    const resposta = JSON.parse(manga);\n\n    var startDate = \"\";\n    var dateBrStart = \"\";\n    \n    if(resposta.attributes.startDate === null){\n        startDate = \"Data indisponível\";\n    }else{\n        startDate = resposta.attributes.startDate.split(\"-\");\n        dateBrStart = `${startDate[2]}/${startDate[1]}/${startDate[0]}`\n    }\n\n    // categories\n    useEffect(() => {\n        axios.get(`${resposta.relationships.categories.links.related}`)\n        .then((resp) => {\n        setCategories(resp.data.data)\n        }).catch((error) => {\n        console.log(\"Indisponível\")\n        })\n    },[])\n\n    const categoriesInformation = categories.slice(0, 3);\n\n    return(\n        <Main theme={themePage}>\n                <img className=\"banner\" src={resposta.attributes.coverImage === null ? (imgNotFound) : (resposta.attributes.coverImage.small)} />\n        <div className=\"voltar\"><Link to=\"/manga\">Voltar</Link></div>        \n                <div className=\"subtitle\">\n                    <img src={resposta.attributes.posterImage.small} className=\"card_image\"/>\n                    <div>\n                        <h1>{resposta.attributes.titles.en_jp || resposta.attributes.titles.en || resposta.attributes.titles.en_us}</h1>\n                        <p>{resposta.type === \"anime\" ? (\"Anime\") : (\"Manga\")}</p>\n\n                        <div className=\"categories\">\n                            {\n                                categoriesInformation.map(resp => {\n                                return <p>{resp.attributes.title}</p>\n                                })\n                            }\n                        </div>\n                        <p>Classificação Média: {resposta.attributes.averageRating === null ? (\"Indisponível\") : (resposta.attributes.averageRating + \"%\")}</p>\n                        <p className=\"subtitle_synopsis\">{resposta.attributes.synopsis}</p>\n                        <p>Data de lançamento: {startDate === \"Data indisponível\" ? (startDate) : (dateBrStart)}</p>\n                        <p>Quantidade de episódios: {resposta.attributes.episodeCount === null || resposta.attributes.episodeCount === undefined ? (\"Indisponível\") : (resposta.attributes.episodeCount)}</p>\n                        <p>Classificação Indicativa: {resposta.attributes.ageRatingGuide === null ? (\"Indisponível\") : (resposta.attributes.ageRatingGuide)}</p>\n                        <p>Status: {resposta.attributes.status === \"finished\" ? (\"finalizado\") : (\"Atual\")}</p>\n                    </div>\n                </div>\n        </Main>\n    );\n\n};"]},"metadata":{},"sourceType":"module"}