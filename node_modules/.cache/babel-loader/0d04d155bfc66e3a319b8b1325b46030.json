{"ast":null,"code":"var _jsxFileName = \"/home/snoopy/Bureau/react-projeto-final-main/src/context/Redirecionamento.js\",\n    _s = $RefreshSig$();\n\nimport react, { createContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const RedirectContext = /*#__PURE__*/createContext({});\nexport const RedirectProvider = props => {\n  _s();\n\n  const [redirecinadoAnime, setRedirecionadoAnime] = useState(() => {\n    if (localStorage.getItem('animeLink')) {\n      return localStorage.getItem('animeLink');\n    } else {\n      return \"/login\";\n    }\n  }); //validação do link redirect\n\n  const [redirecinadoManga, setRedirecionadoManga] = useState(() => {\n    if (localStorage.getItem('mangaLink')) {\n      return localStorage.getItem('mangaLink');\n    } else {\n      return \"/login\";\n    }\n  }); //validação do link redirect\n\n  const [redirecinadoNoticias, setRedirecionadoNoticias] = useState(() => {\n    if (localStorage.getItem('notLink')) {\n      return localStorage.getItem('notLink');\n    } else {\n      return \"/login\";\n    }\n  }); //validação do link redirect\n\n  return /*#__PURE__*/_jsxDEV(RedirectContext.Provider, {\n    value: {\n      redirecinadoAnime,\n      setRedirecionadoAnime,\n      redirecinadoManga,\n      setRedirecionadoManga,\n      redirecinadoNoticias,\n      setRedirecionadoNoticias\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 1\n  }, this);\n};\n\n_s(RedirectProvider, \"j7HeDMtBwRS9QZh+FCOF3HvYQbY=\");\n\n_c = RedirectProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"RedirectProvider\");","map":{"version":3,"sources":["/home/snoopy/Bureau/react-projeto-final-main/src/context/Redirecionamento.js"],"names":["react","createContext","useState","RedirectContext","RedirectProvider","props","redirecinadoAnime","setRedirecionadoAnime","localStorage","getItem","redirecinadoManga","setRedirecionadoManga","redirecinadoNoticias","setRedirecionadoNoticias","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;;AAEA,OAAO,MAAMC,eAAe,gBAAGF,aAAa,CAAC,EAAD,CAArC;AAEP,OAAO,MAAMG,gBAAgB,GAAIC,KAAD,IAAW;AAAA;;AAGvC,QAAM,CAACC,iBAAD,EAAoBC,qBAApB,IAA6CL,QAAQ,CAAC,MAAM;AAC9D,QAAGM,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAH,EAAsC;AAClC,aAAOD,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAP;AACH,KAFD,MAEO;AACH,aAAO,QAAP;AACH;AACJ,GAN0D,CAA3D,CAHuC,CASnC;;AACJ,QAAM,CAACC,iBAAD,EAAoBC,qBAApB,IAA6CT,QAAQ,CAAC,MAAM;AAC9D,QAAGM,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAH,EAAsC;AAClC,aAAOD,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAP;AACH,KAFD,MAEO;AACH,aAAO,QAAP;AACH;AACJ,GAN0D,CAA3D,CAVuC,CAgBjC;;AACN,QAAM,CAAEG,oBAAF,EAAwBC,wBAAxB,IAAqDX,QAAQ,CAAC,MAAM;AACtE,QAAGM,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAH,EAAoC;AAChC,aAAOD,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAP;AACH,KAFD,MAEO;AACH,aAAO,QAAP;AACH;AACJ,GANkE,CAAnE,CAjBuC,CAuBjC;;AAIV,sBACA,QAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAE;AAAEH,MAAAA,iBAAF;AAAqBC,MAAAA,qBAArB;AAA4CG,MAAAA,iBAA5C;AAA+DC,MAAAA,qBAA/D;AAAuFC,MAAAA,oBAAvF;AAA6GC,MAAAA;AAA7G,KAAjC;AAAA,cACKR,KAAK,CAACS;AADX;AAAA;AAAA;AAAA;AAAA,UADA;AAMC,CAjCM;;GAAMV,gB;;KAAAA,gB","sourcesContent":["import react, { createContext, useState } from 'react'\n\nexport const RedirectContext = createContext({});\n\nexport const RedirectProvider = (props) => {\n\n\n    const [redirecinadoAnime, setRedirecionadoAnime] = useState(() => {\n        if(localStorage.getItem('animeLink') ){\n            return localStorage.getItem('animeLink') \n        } else {\n            return \"/login\"\n        }\n    }); //validação do link redirect\n    const [redirecinadoManga, setRedirecionadoManga] = useState(() => {\n        if(localStorage.getItem('mangaLink') ){\n            return localStorage.getItem('mangaLink') \n        } else {\n            return \"/login\"\n        }\n    });   //validação do link redirect\n    const [ redirecinadoNoticias, setRedirecionadoNoticias ] = useState(() => {\n        if(localStorage.getItem('notLink') ){\n            return localStorage.getItem('notLink') \n        } else {\n            return \"/login\"\n        }\n    });   //validação do link redirect\n\n    \n\nreturn (\n<RedirectContext.Provider value={{ redirecinadoAnime, setRedirecionadoAnime, redirecinadoManga, setRedirecionadoManga,  redirecinadoNoticias, setRedirecionadoNoticias  }}>\n    {props.children}\n</RedirectContext.Provider>\n);\n\n};"]},"metadata":{},"sourceType":"module"}