{"ast":null,"code":"var _jsxFileName = \"/home/snoopy/Bureau/react-projeto-final-main/src/context/Theme.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useState, useContext } from 'react';\nimport { lightTheme, darkTheme } from '../styles/themes/theme';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ThemeContext = /*#__PURE__*/createContext();\nexport default function ThemeProvider({\n  children\n}) {\n  _s();\n\n  const [themePage, setTheme] = useState(() => {\n    if (localStorage.getItem('theme') === \"false\") {\n      return darkTheme;\n    } else if (localStorage.getItem('theme') === \"true\") {\n      return lightTheme;\n    } else {\n      return lightTheme;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      themePage,\n      setTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ThemeProvider, \"/ulECIiq++g/vrd6ln6by39HqUc=\");\n\n_c = ThemeProvider;\nexport function useTheme() {\n  _s2();\n\n  const context = useContext(ThemeContext);\n  const {\n    themePage,\n    setTheme\n  } = context;\n  return {\n    themePage,\n    setTheme\n  };\n}\n\n_s2(useTheme, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"sources":["/home/snoopy/Bureau/react-projeto-final-main/src/context/Theme.js"],"names":["React","createContext","useState","useContext","lightTheme","darkTheme","ThemeContext","ThemeProvider","children","themePage","setTheme","localStorage","getItem","useTheme","context"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,UAAzC,QAA4D,OAA5D;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,wBAAtC;;AAEA,OAAO,MAAMC,YAAY,gBAAGL,aAAa,EAAlC;AAEP,eAAe,SAASM,aAAT,CAAuB;AAAEC,EAAAA;AAAF,CAAvB,EAAqC;AAAA;;AAEhD,QAAM,CAACC,SAAD,EAAYC,QAAZ,IAAwBR,QAAQ,CAAC,MAAM;AACzC,QAAGS,YAAY,CAACC,OAAb,CAAqB,OAArB,MAAkC,OAArC,EAA6C;AACzC,aAAOP,SAAP;AACH,KAFD,MAEM,IAAGM,YAAY,CAACC,OAAb,CAAqB,OAArB,MAAkC,MAArC,EAA4C;AAC9C,aAAOR,UAAP;AACH,KAFK,MAED;AACD,aAAOA,UAAP;AACH;AACJ,GARqC,CAAtC;AAUA,sBACI,QAAC,YAAD,CAAc,QAAd;AACI,IAAA,KAAK,EAAE;AACHK,MAAAA,SADG;AAEHC,MAAAA;AAFG,KADX;AAAA,cAMKF;AANL;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;GAtBuBD,a;;KAAAA,a;AAyBxB,OAAO,SAASM,QAAT,GAAoB;AAAA;;AACvB,QAAMC,OAAO,GAAGX,UAAU,CAACG,YAAD,CAA1B;AACA,QAAM;AAAEG,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA0BI,OAAhC;AACA,SAAO;AAAEL,IAAAA,SAAF;AAAaC,IAAAA;AAAb,GAAP;AACH;;IAJeG,Q","sourcesContent":["import React, { createContext, useState, useContext  } from 'react';\nimport { lightTheme, darkTheme } from '../styles/themes/theme';\n\nexport const ThemeContext = createContext();\n\nexport default function ThemeProvider({ children }) {\n\n    const [themePage, setTheme] = useState(() => {\n        if(localStorage.getItem('theme') === \"false\"){\n            return darkTheme\n        }else if(localStorage.getItem('theme') === \"true\"){\n            return lightTheme\n        }else{\n            return lightTheme\n        }\n    });\n\n    return(\n        <ThemeContext.Provider \n            value={{\n                themePage,\n                setTheme\n            }}\n            >\n            {children}\n        </ThemeContext.Provider>\n    );\n}\n\n\nexport function useTheme() {\n    const context = useContext(ThemeContext);\n    const { themePage, setTheme } = context;\n    return { themePage, setTheme };\n}"]},"metadata":{},"sourceType":"module"}