{"ast":null,"code":"var _jsxFileName = \"/home/snoopy/Bureau/react-projeto-final-main/src/pages/AnimePage/AnimePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Main } from '../../pages/style/Styled';\nimport { useTheme } from '../../context/Theme';\nimport imgNotFound from '../../assets/imagem_nao_disponivel.png';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AnimePagina() {\n  _s();\n\n  const [categories, setCategories] = useState([]);\n  const {\n    themePage\n  } = useTheme();\n  const anime = localStorage.getItem('anime');\n  const resposta = JSON.parse(anime);\n  var startDate = \"\";\n  var dateBrStart = \"\";\n\n  if (resposta.attributes.startDate === null) {\n    startDate = \"Data indisponível\";\n  } else {\n    startDate = resposta.attributes.startDate.split(\"-\");\n    dateBrStart = `${startDate[2]}/${startDate[1]}/${startDate[0]}`;\n  } // categories\n\n\n  useEffect(() => {\n    axios.get(`${resposta.relationships.categories.links.related}`).then(resp => {\n      setCategories(resp.data.data);\n    }).catch(error => {\n      console.log(\"Indisponível\");\n    });\n  }, []);\n  const categoriesInformation = categories.slice(0, 3);\n  return /*#__PURE__*/_jsxDEV(Main, {\n    theme: themePage,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post_image_div\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"banner\",\n      src: resposta.attributes.coverImage === null ? imgNotFound : resposta.attributes.coverImage.small\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"voltar\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/anime\",\n        children: \"Voltar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 31\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"subtitle\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: resposta.attributes.posterImage.small,\n        className: \"card_image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: resposta.attributes.titles.en_jp || resposta.attributes.titles.en || resposta.attributes.titles.en_us\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: resposta.type === \"anime\" ? \"Anime\" : \"Manga\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"categories\",\n          children: categoriesInformation.map(resp => {\n            return /*#__PURE__*/_jsxDEV(\"p\", {\n              children: resp.attributes.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 26\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Classifica\\xE7\\xE3o M\\xE9dia: \", resposta.attributes.averageRating === null ? \"Indisponível\" : /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"resposta_text\",\n            children: resposta.attributes.averageRating + \"%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 103\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"subtitle_synopsis\",\n          children: resposta.attributes.synopsis\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Data de lan\\xE7amento: \", startDate === \"Data indisponível\" ? startDate : /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"resposta_text\",\n            children: dateBrStart\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 88\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Quantidade de epis\\xF3dios: \", resposta.attributes.episodeCount === null ? \"Indisponível\" : /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"resposta_text\",\n            children: resposta.attributes.episodeCount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 106\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Classifica\\xE7\\xE3o Indicativa: \", resposta.attributes.ageRatingGuide === null ? \"Indisponível\" : /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"resposta_text\",\n            children: resposta.attributes.ageRatingGuide\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 109\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Status: \", resposta.attributes.status === \"finished\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"resposta_text\",\n            children: \"finalizado\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 70\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"resposta_text\",\n            children: \"Atual\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 124\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AnimePagina, \"jPl/D0uJixA0783m9yfqgV9kLbk=\", false, function () {\n  return [useTheme];\n});\n\n_c = AnimePagina;\nexport default AnimePagina;\n\nvar _c;\n\n$RefreshReg$(_c, \"AnimePagina\");","map":{"version":3,"sources":["/home/snoopy/Bureau/react-projeto-final-main/src/pages/AnimePage/AnimePage.js"],"names":["React","useEffect","useState","Main","useTheme","imgNotFound","axios","Link","AnimePagina","categories","setCategories","themePage","anime","localStorage","getItem","resposta","JSON","parse","startDate","dateBrStart","attributes","split","get","relationships","links","related","then","resp","data","catch","error","console","log","categoriesInformation","slice","coverImage","small","posterImage","titles","en_jp","en","en_us","type","map","title","averageRating","synopsis","episodeCount","ageRatingGuide","status"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Main } from '../../pages/style/Styled';\nimport { useTheme } from '../../context/Theme';\nimport imgNotFound from '../../assets/imagem_nao_disponivel.png'\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nfunction AnimePagina(){\n\n  const [categories, setCategories] = useState([])\n\n  const { themePage } = useTheme();\n\n  const anime = localStorage.getItem('anime');\n  const resposta = JSON.parse(anime);\n\n  var startDate = \"\";\n  var dateBrStart = \"\";\n  \n  if(resposta.attributes.startDate === null){\n    startDate = \"Data indisponível\";\n  }else{\n    startDate = resposta.attributes.startDate.split(\"-\");\n    dateBrStart = `${startDate[2]}/${startDate[1]}/${startDate[0]}`\n  }\n\n\n  // categories\n  useEffect(() => {\n    axios.get(`${resposta.relationships.categories.links.related}`)\n    .then((resp) => {\n      setCategories(resp.data.data)\n    }).catch((error) => {\n      console.log(\"Indisponível\")\n    })\n  },[])\n\n  const categoriesInformation = categories.slice(0, 3);\n\n  return(\n    <Main theme={themePage}>\n      <div className=\"post_image_div\">\n          \n      </div>\n      <img className=\"banner\" src={resposta.attributes.coverImage === null ? (imgNotFound) : (resposta.attributes.coverImage.small)} />\n      <div className=\"voltar\"><Link to=\"/anime\">Voltar</Link></div>\n      <div className=\"subtitle\">\n          <img src={resposta.attributes.posterImage.small} className=\"card_image\"/>\n          <div>\n            <h1>{resposta.attributes.titles.en_jp || resposta.attributes.titles.en || resposta.attributes.titles.en_us}</h1>\n            <p >{resposta.type === \"anime\" ? (\"Anime\") : (\"Manga\")}</p>\n\n            <div className=\"categories\">\n              {\n                categoriesInformation.map(resp => {\n                  return <p>{resp.attributes.title}</p>\n                })\n              }\n            </div>\n\n            <p>Classificação Média: {resposta.attributes.averageRating === null ? (\"Indisponível\") : (<span className=\"resposta_text\">{resposta.attributes.averageRating + \"%\"}</span>)}</p>\n\n            <p className=\"subtitle_synopsis\">{resposta.attributes.synopsis}</p>\n            <p>Data de lançamento: {startDate === \"Data indisponível\" ? (startDate) : (<span className=\"resposta_text\">{dateBrStart}</span>)}</p>\n            <p>Quantidade de episódios: {resposta.attributes.episodeCount === null ? (\"Indisponível\") : (<span className=\"resposta_text\">{resposta.attributes.episodeCount}</span>)}</p>\n            \n\n            <p>Classificação Indicativa: {resposta.attributes.ageRatingGuide === null ? (\"Indisponível\") : (<span className=\"resposta_text\">{resposta.attributes.ageRatingGuide}</span>)}</p>\n            \n            <p>Status: {resposta.attributes.status === \"finished\" ? (<span className=\"resposta_text\">finalizado</span>) : (<span className=\"resposta_text\">Atual</span>)}</p>\n          </div>\n      </div>\n    </Main>\n  );\n    \n}\n\nexport default AnimePagina;"]},"metadata":{},"sourceType":"module"}